{"version":3,"sources":["ToDoList.js","index.js"],"names":["checkStatus","response","ok","Error","json","ToDoList","React","Component","constructor","props","super","this","state","new_task","tasks","handleChange","bind","handleSubmit","fetchTasks","deleteTask","toggleComplete","componentDidMount","shouldComponentUpdate","nextProps","nextState","fetch","then","setState","catch","error","console","message","event","target","value","preventDefault","trim","method","mode","headers","Content-Type","body","JSON","stringify","task","content","prevState","id","completed","newCompletedStatus","map","render","createElement","className","length","key","onClick","type","onChange","checked","onSubmit","placeholder","container","document","getElementById","ReactDOM","createRoot"],"mappings":"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","file":"static/js/main.85a466d0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst checkStatus = (response) => {\r\n  if (response.ok) {\r\n    return response;\r\n  }\r\n  throw new Error(\"Request was either a 404 or 500\");\r\n};\r\n\r\nconst json = (response) => response.json();\r\n\r\nclass ToDoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      new_task: \"\",\r\n      tasks: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.fetchTasks = this.fetchTasks.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.toggleComplete = this.toggleComplete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTasks();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextState.tasks !== this.state.tasks ||\r\n      nextState.new_task !== this.state.new_task\r\n    );\r\n  }\r\n\r\n  fetchTasks() {\r\n    fetch(\"https://fewd-todolist-api.onrender.com/tasks?api_key=48\")\r\n      .then(checkStatus)\r\n      .then(json)\r\n      .then((response) => {\r\n        this.setState({ tasks: response.tasks });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ new_task: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let { new_task } = this.state;\r\n    new_task = new_task.trim();\r\n    if (!new_task) {\r\n      return;\r\n    }\r\n    fetch(\"https://fewd-todolist-api.onrender.com/tasks?api_key=48\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ task: { content: new_task } }),\r\n    })\r\n      .then(checkStatus)\r\n      .then(json)\r\n      .then((response) => {\r\n        this.setState((prevState) => ({\r\n          tasks: [...prevState.tasks, response.task], // Adiciona a nova tarefa diretamente no estado\r\n          new_task: \"\",\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  deleteTask(id) {\r\n    if (!id) return;\r\n\r\n    fetch(`https://fewd-todolist-api.onrender.com/tasks/${id}?api_key=48`, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n    })\r\n      .then(checkStatus)\r\n      .then(() => {\r\n        this.fetchTasks();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  toggleComplete(id, completed) {\r\n    const newCompletedStatus = !completed;\r\n\r\n    fetch(`https://fewd-todolist-api.onrender.com/tasks/${id}?api_key=48`, {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ task: { completed: newCompletedStatus } }),\r\n    })\r\n      .then(checkStatus)\r\n      .then(() => {\r\n        // Em vez de buscar todas as tarefas, atualizamos diretamente no estado\r\n        this.setState((prevState) => ({\r\n          tasks: prevState.tasks.map((task) =>\r\n            task.id === id ? { ...task, completed: newCompletedStatus } : task\r\n          ),\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { new_task, tasks } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h2 className=\"mb-3\">To Do List</h2>\r\n            {tasks.length > 0 ? (\r\n              tasks.map((task) => {\r\n                return (\r\n                  <div key={task.id} className=\"row mb-1\">\r\n                    <p className=\"col\">{task.content}</p>\r\n                    <button onClick={() => this.deleteTask(task.id)}>\r\n                      Delete\r\n                    </button>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() =>\r\n                        this.toggleComplete(task.id, task.completed)\r\n                      }\r\n                      checked={task.completed}\r\n                    />\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No tasks here</p>\r\n            )}\r\n            <form onSubmit={this.handleSubmit} className=\"form-inline my-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mr-sm-2 mb-2\"\r\n                placeholder=\"New task\"\r\n                value={new_task}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button type=\"submit\" className=\"btn btn-primary mb-2\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ToDoList from \"./ToDoList\"; // Create this component in the next step\n\nconst container = document.getElementById(\"root\");\nconst root = ReactDOM.createRoot(container);\nroot.render(<ToDoList />);\n"],"sourceRoot":""}